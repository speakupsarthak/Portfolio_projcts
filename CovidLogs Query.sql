SELECT *
FROM DEATH
ORDER BY 3,4

--DEATH RATE OVER TOTAL CASES

SELECT LOCATION, DATE, total_cases, total_deaths, 
(CONVERT(FLOAT, total_DEATHS)/CONVERT(FLOAT, total_CASES)) * 100 AS DEATHRATE
FROM DEATH
ORDER BY 1, 2

--TOTAL CASES OVER POPULATION

SELECT LOCATION, DATE, population, total_cases, total_deaths, 
(CONVERT(FLOAT, total_CASES)/CONVERT(FLOAT, POPULATION)) * 100 AS Infection_Rate
FROM DEATH
WHERE LOCATION = 'INDIA'
ORDER BY 1, 2

--INFECTION RATE OF EACH COUNTRY 

SELECT LOCATION, POPULATION, MAX(CONVERT(FLOAT, total_cases)) AS CASES,
MAX((CONVERT(FLOAT, total_CASES)/CONVERT(FLOAT, POPULATION))) * 100 AS Infection_Rate
FROM DEATH
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION, POPULATION
ORDER BY 4 DESC

--INFECTION RATE OF DIFFERENT REGIONS

SELECT LOCATION, POPULATION, MAX(CONVERT(FLOAT, total_cases)) AS CASES,
MAX((CONVERT(FLOAT, total_CASES)/CONVERT(FLOAT, POPULATION))) * 100 AS Infection_Rate
FROM DEATH
WHERE CONTINENT IS NULL
GROUP BY LOCATION, POPULATION
ORDER BY 4 DESC

--DEATH COUNT OF EACH COUNTRY

SELECT LOCATION, MAX(CONVERT(FLOAT, total_DEATHS)) AS DEATHS
FROM DEATH
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION
ORDER BY 2

--DEATH COUNT OF DIFFERENT REGIONS

SELECT LOCATION, MAX(CONVERT(FLOAT, total_DEATHS)) AS DEATHS
FROM DEATH
WHERE CONTINENT IS NULL
GROUP BY LOCATION
ORDER BY 2

-- GLOBAL NUMBERS

SELECT DATE, SUM(NEW_CASES) AS CASES, SUM(NEW_DEATHS) AS DEATHS, 
SUM(NEW_DEATHS)/SUM(NEW_CASES)*100 AS DEATH_RATE
FROM Death
WHERE CONTINENT IS NOT NULL
AND NEW_CASES <> 0
GROUP BY DATE
ORDER BY 1

-- JOINING BOTH TABLES

SELECT *
FROM DEATH
JOIN VACCINATION
	ON DEATH.LOCATION = VACCINATION.LOCATION
	AND DEATH.DATE = VACCINATION.DATE

-- TOTAL VACCINATION DONE TO THAT DATE IN INDIA

SELECT DEATH.CONTINENT, DEATH.LOCATION, DEATH.DATE, SUM(CONVERT(BIGINT,NEW_VACCINATIONS)) 
	   OVER(PARTITION BY DEATH.LOCATION ORDER BY DEATH.LOCATION, DEATH.DATE) AS ROLLING_COUNT
FROM DEATH
JOIN VACCINATION
	ON DEATH.LOCATION = VACCINATION.LOCATION
	AND DEATH.DATE = VACCINATION.DATE
WHERE DEATH.LOCATION = 'INDIA'
ORDER BY DEATH.LOCATION, DEATH.DATE

--TOTAL VACCINATION PERCENTAGE TO DATE FOR EACH COUNTRY

WITH VACC(CONTINENT, LOCATION, POPULATION, DATE, ROLL) AS
(SELECT DEATH.CONTINENT, DEATH.LOCATION, DEATH.POPULATION, DEATH.DATE, SUM(CONVERT(BIGINT,NEW_VACCINATIONS)) 
	   OVER(PARTITION BY DEATH.LOCATION ORDER BY DEATH.LOCATION, DEATH.DATE) AS ROLLING_COUNT
FROM DEATH
JOIN VACCINATION
	ON DEATH.LOCATION = VACCINATION.LOCATION
	AND DEATH.DATE = VACCINATION.DATE
WHERE DEATH.CONTINENT IS NOT NULL)
SELECT *, (ROLL/POPULATION)*100 AS ROLLINGPERCENTAGE
FROM VACC

--ROLLING COUNT OF VACCINATIONS USING TEMP TABLES

DROP TABLE IF EXISTS #ROLLPERCENT
CREATE TABLE #ROLLPERCENT
(CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
POPULATION BIGINT,
DATE DATETIME,
ROLLING_COUNT FLOAT
)
INSERT INTO #ROLLPERCENT
SELECT DEATH.CONTINENT, DEATH.LOCATION, DEATH.POPULATION, DEATH.DATE, SUM(CONVERT(BIGINT,NEW_VACCINATIONS)) 
	    OVER(PARTITION BY DEATH.LOCATION ORDER BY DEATH.LOCATION, DEATH.DATE) AS ROLLING_COUNT
FROM DEATH
JOIN VACCINATION
	ON DEATH.LOCATION = VACCINATION.LOCATION
	AND DEATH.DATE = VACCINATION.DATE
WHERE DEATH.CONTINENT IS NOT NULL

SELECT *
FROM #ROLLPERCENT
ORDER BY LOCATION